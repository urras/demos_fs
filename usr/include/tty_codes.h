/* НАБОР ПРОГРАММ ДЛЯ РАБОТЫ С ЭКРАНОМ ТЕРМИНАЛА

Tочки входа:

   dpbeg()                     инициализация экранного режима
   dpend()                     завершение экранного режима
   {тип}=dpd()                 сообщает параметры терминала:
				  xdim     - размер экрана по горизонтали
				  ydim     - размер экрана по вертикали
				  tflag    - флаги возможностей терминала
   dpo(c)                      вывод одного символа
   c=dpi()                     ввод одного символа
   c=dpa()                     асинхронный ввод одного символа,
				  <0 если символ не был введен
   dpp(x,y)                    установ курсора в позицию x,y
   dps(s)                      вывод строки символов до '\0'
   dpn(n,c)                    вывод 'n' раз символа 'c'
*/

#ifndef    tty_codes_h
#   define tty_codes_h

struct s_dpd {int xdim, ydim, tflag;}  dpd();
struct s_dpp {int xpos, ypos;}         dpp();
int    dpbeg(), dpend(), dpo(), dpi(), dpa(), dps(), dpn();


/* КОДИРОВКА СПЕЦСИМВОЛОВ ТЕРМИНАЛА */

#define ctrl(x) ('x'&037)
#define spec(x) ((x)|0x0100)

enum {
			/* ВВОДИМЫЕ И ВЫВОДИМЫЕ СИМВОЛЫ */
    lf=ctrl(j),              /* перевод курсора в 0-ую поз. след. строки */
    rn=ctrl(m),              /* перевод курсора в 0-ую поз. текущ.строки */
    cu=ctrl(u), cd=ctrl(t),  /* сдвиг курсора вверх и вниз */
    cr=ctrl(v), cl=ctrl(w),  /* сдвиг курсора вправо и влево */
    rd=ctrl(r), ru=ctrl(s),  /* роллирование экрана вниз и вверх (опция) */
    bl=ctrl(g),              /* гудок */
    de=0177,                 /* забой */
    ic=ctrl(x),  dc=ctrl(y), /* вставка и удаление символа (опция) */
    il=ctrl(z),  dl=ctrl([), /* вставка и удаление строки  (опция) */
    es=ctrl(\\), el=ctrl(q), /* стирание конца экрана и конца строки */

			/* ТОЛЬКО ВЫВОДИМЫЕ СИМВОЛЫ */
    ps=ctrl(]),              /* ps,x,y - позиционирование в (x,y) */
    rp=ctrl(^),              /* rp,n,c - n раз выводит символ c */
    wt=ctrl(_),              /* wt,n   - задержка на 0.1*n сек */

			/* ТОЛЬКО ВВОДИМЫЕ СИМВОЛЫ */
    s_debug =ctrl(d),        /* вызов отладчика */
    s_help  =ctrl(h),        /* вызов подсказки */
    s_erase =es,             /* уничтожение объекта */
    s_refuse=de,             /* отказ от действия */
    s_break =ctrl(b),        /* аварийный конец работы */
    s_finish=ctrl(f),        /* конец работы */
    s_spec  =ps,             /* префикс к составным символам */
    ta=ctrl(i),
};

enum {  no_symb = -1,                 /* ошибка, символа нет */
	MAXREPT = 255 };              /* макс. коэффициент повторения */


#define is_lower(c)   (((c)&0140)==0140)  /* МАКРОСЫ ДЛЯ АНАЛИЗА СИМВОЛОВ*/
#define is_upper(c)   (((c)&0140)==0100)
#define is_digit(c)   ((c)>='0' && (c)<='9')
#define is_control(c) ((unsigned)(c) < ' ')
#define is_rus(c)     (((c)&0300)==0300)
#define is_print(c)   ( ((c)>=' ' && (unsigned)(c)<0177) || is_rus(c) )
#define to_lower(c)   ((c)|040)
#define to_upper(c)   ((c)&(~040))

enum t_dpd {                        /* ФЛАГИ ВОЗМОЖНОСТЕЙ ТЕРМИНАЛА */
     a_icdc=1, a_ildl=2,                /* можно выводить ic-dc и il-dl */
     a_rd=4,                            /* можно выводить rd */
     a_lower=8 };                       /* есть маленькие буквы */

enum t_dpr {                        /* ФЛАГИ УПРАВЛЕНИЯ РЕДАКТОРОМ СТРОКИ*/
     on_control=1,                      /* конец по любому контр. символу*/
     on_border=2,                       /* конец по выходу за границы стр*/
     on_space=4,                        /* конец по пробелу, табуляции,ic*/
     on_icdc=8,                         /* конец по вставке, удалению сим*/
     on_no_digit=16 };                  /* конец по не цифре */

#endif
